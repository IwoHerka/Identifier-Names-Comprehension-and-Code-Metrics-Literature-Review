id,Mendeley,year,citation,venue,category,construct name
C10,https://www.mendeley.com/reference-manager/reader-v2/b5b6d7c9-e155-35e2-a06e-d3cfd399e4da/1429940c-d4f2-3313-79ba-e68fea32a656,2008,"Marcus, A., Poshyvanyk, D., & Ferenc, R. (2008). Using the conceptual cohesion of classes for fault prediction in object-oriented systems. IEEE Transactions on Software Engineering, 34(2), 287-300.",journal,,Software cohesion
C11,https://www.mendeley.com/reference-manager/reader-v2/8dad06fa-0fe1-3ad6-8c61-5aa9a735f302/1ab1acbd-e680-3ae3-7882-d6c607532bee,2018,"Tashima, K., Aman, H., Amasaki, S., Yokogawa, T., & Kawahara, M. (2018, August). Fault-prone java method analysis focusing on pair of local variables with confusing names. In 2018 44th Euromicro Conference on Software Engineering and Advanced Applications (SEAA) (pp. 154-158). IEEE.",conference,identifier quality (confiusing name) <> fault proneness,Confusing variables
C12,https://www.mendeley.com/reference-manager/reader-v2/5512c286-6628-308b-9225-83b0ce965b8b/39f486b0-6955-389b-036b-2152e654452e,2016,"Aman, H., Amasaki, S., Yokogawa, T., & Kawahara, M. (2016, December). Local Variables with Compound Names and Comments as Signs of Fault-Prone Java Methods. In QuASoQ/TDA@ APSEC (pp. 4-11).",workshop,"local variables with compound names - fault proneness, method body comments - fault proneness",Local variables
C13,https://www.mendeley.com/reference-manager/reader-v2/d83fc13f-fced-35ec-b172-6509104ac6c9/0903fb4c-3d0d-d147-2494-2802dc647e9a,2017,"Suzuki, S., Aman, H., & Kawahara, M. (2017, July). Empirical Study of Fault-Prone Method's Name and Implementation: Analysis on Three Prefixes-Get, Set and Be. In 2017 5th Intl Conf on Applied Computing and Information Technology/4th Intl Conf on Computational Science/Intelligence and Applied Informatics/2nd Intl Conf on Big Data, Cloud Computing, Data Science (ACIT-CSII-BCD) (pp. 260-265). IEEE.",conference,identifier quality (naming bugs) <> fault proneness,Method names
C14,https://www.mendeley.com/reference-manager/reader-v2/8830df35-884d-3f1e-bedb-a0f90ee05e40/5f7cbf6b-05ad-e8cf-03e4-f0543f251866,2017,"Guerrouj, L., Kermansaravi, Z., Arnaoudova, V., Fung, B. C., Khomh, F., Antoniol, G., & Guéhéneuc, Y. G. (2017). Investigating the relation between lexical smells and change-and fault-proneness: an empirical study. Software Quality Journal, 25, 641-670.",journal,"identifier quality (LBS) > change proneness
identifier quality (LBS) > fault proneness",Lexical smells
C15,https://www.mendeley.com/reference-manager/reader-v2/8274cd9c-f8b6-3394-ba7d-d2142456c529/2282c823-f08f-86cd-3fb9-e17cc689a042,2015,"Kawashima, N., & Mizuno, O. (2015). Predicting fault-prone modules by word occurrence in identifiers. Software Engineering Research, Management and Applications, 87-98.",journal,number of words in identifiers > fault proneness,Modules
C2,https://www.mendeley.com/reference-manager/reader-v2/0d121a33-ec27-3e24-a68a-d927fcfe9f0b/6d6993b6-a82f-67a3-7860-c97bdf47f7c6,2009,"Butler, S., Wermelinger, M., Yu, Y., & Sharp, H. (2009, October). Relating identifier naming flaws and code quality: An empirical study. In 2009 16th Working Conference on Reverse Engineering (pp. 31-35). IEEE.
",conference,identifier quality < fault proneness,Identifier naming flaws
C3,https://www.mendeley.com/reference-manager/reader-v2/f8fe7b6d-e54d-3dae-a412-9e094a2426b3/643b4841-a52d-fb87-5b50-a06542536ef2,2010,"Butler, S., Wermelinger, M., Yu, Y., & Sharp, H. (2010, March). Exploring the influence of identifier names on code quality: An empirical study. In 2010 14th European Conference on Software Maintenance and Reengineering (pp. 156-165). IEEE.",conference,identifier quality <> code quality,Identifier names
C4,https://www.mendeley.com/reference-manager/reader-v2/3557489b-ad5c-395f-9e8f-bb28c832b42a/71adb3b3-1cd5-fe75-7ce1-ac5884037bd6,2011,"Abebe, S. L., Haiduc, S., Tonella, P., & Marcus, A. (2011, September). The effect of lexicon bad smells on concept location in source code. In 2011 IEEE 11th International Working Conference on Source Code Analysis and Manipulation (pp. 125-134). Ieee.",conference,identifier quality (LBS) > concept location,Lexicon bad smells
C5,https://www.mendeley.com/reference-manager/reader-v2/96939ad4-48b7-3e4f-a575-9a7c7984203e/678bdfd5-450b-0fa7-7845-b35eb92fb05a,2012,"Kawamoto, K., & Mizuno, O. (2012, October). Predicting fault-prone modules using the length of identifiers. In 2012 Fourth International Workshop on Empirical Software Engineering in Practice (pp. 30-34). IEEE.",workshop,identifier length <> fault proneness,Identifier length
C6,https://www.mendeley.com/reference-manager/reader-v2/501898e4-c663-3dec-a091-9f2790a20f2e/5a09923c-141c-ff45-640d-118c1c3fb186,2017,"Xu, W., Xu, D., & Deng, L. (2017, July). Measurement of source code readability using word concreteness and memory retention of variable names. In 2017 IEEE 41st Annual Computer Software and Applications Conference (COMPSAC) (Vol. 1, pp. 33-38). IEEE.",conference,identifier quality (WCMR) <> fault proneness,Variable names
C7,https://www.mendeley.com/reference-manager/reader-v2/d3cd13d5-02c8-3382-9db5-09190f71b26e/26ed1c7c-3728-184f-66e0-73cde0512fba,2012,"Abebe, S. L., Arnaoudova, V., Tonella, P., Antoniol, G., & Gueheneuc, Y. G. (2012, October). Can lexicon bad smells improve fault prediction?. In 2012 19th Working Conference on Reverse Engineering (pp. 235-244). IEEE.",conference,identifier quality (LBS) > fault prediction,Lexicon bad smells
C8,https://www.mendeley.com/reference-manager/reader-v2/ce3dd995-356f-3d92-9ff7-80b84feb0b81/241bbc9d-56be-d749-2ad1-e7d538a21922,2010,"Eshkevari, L. M. (2010, October). Linguistic driven refactoring of source code identifiers. In 2010 17th Working Conference on Reverse Engineering (pp. 297-300). IEEE.",conference,"identifier entropy, identifier context-coverage <> fault proneness",Identifiers
C9,https://www.mendeley.com/reference-manager/reader-v2/8a48e6b0-e124-342d-acbb-ca12ebaa4e11/3c12feef-5b55-e6d7-2be5-098a7f5c7e86,2007,"Binkley, D., Feild, H., Lawrie, D., & Pighin, M. (2007, September). Software fault prediction using language processing. In Testing: Academic and Industrial Conference Practice and Research Techniques-MUTATION (TAICPART-MUTATION 2007) (pp. 99-110). IEEE.",conference,QALP > fault prediction,Language processing
H1,https://www.mendeley.com/reference-manager/reader-v2/7f64a8b3-52e5-36f6-88c5-fd41a22958bf/5002a66f-083d-fcb3-61fc-d57594b375fa,2019,"Hofmeister, J. C., Siegmund, J., & Holt, D. V. (2019). Shorter identifier names take longer to comprehend. Empirical Software Engineering, 24(1), 417-443.",journal,"""identifier naming styles"" (length and semantics) > code comprehension",Identifier names
H10,https://www.mendeley.com/reference-manager/reader-v2/8c2ceb0c-d1bc-30b6-b424-0c7dbc6858db/5d90a525-e534-4db9-3b37-27d456dfb086,2014,"Guerrouj, L., Di Penta, M., Guéhéneuc, Y. G., & Antoniol, G. (2014). An experimental investigation on the effects of context on source code identifiers splitting and expansion. Empirical Software Engineering, 19(6), 1706-1753.",journal,"RQ1: contextual information > code comprehension
RQ2: identifier term characteristics (full English words, acronyms, abbreviations) > code comprehension
RQ3: participant background > code comprehension",Identifier splitting
H11,https://www.mendeley.com/reference-manager/reader-v2/f1d3e227-e7ac-3f2c-aa0b-a1eab01a8288/70580f7c-a5f5-fd0d-4dc4-33a2f7c37726,2009,"Binkley, D., Lawrie, D., Maex, S., & Morrell, C. (2009). Identifier length and limited programmer memory. Science of Computer Programming, 74(7), 430-445.",journal,identifier length and familiarity > code comprehension,Identifier length
H12,https://www.mendeley.com/reference-manager/reader-v2/e2087f17-a383-3be4-897c-baacd6dc6e27/3efe1d07-ed86-517d-0be2-f5191e6efdf6,1979,"Sheppard, S. B., Curtis, B., Milliman, P., & Love, T. (1979). Modern coding practices and programmer performance. Computer, 12(12), 41-49.",journal,mnemonic variable names > code comprehension (exp. 1),Coding practices
H13,https://www.mendeley.com/reference-manager/reader-v2/bebf379d-96db-3f05-a155-30dd205540c5/71c0f1c1-eec3-c899-6040-f54c753d3e0a,1994,"Teasley, B. E. (1994). The effects of naming style and expertise on program comprehension. International Journal of Human-Computer Studies, 40(5), 757-770.",journal,variable and procedure naming x expertise > code comprehension,Naming style
H14,https://www.mendeley.com/reference-manager/reader-v2/071717e3-826b-39e4-891f-7038fab46cf2/6d0cc1c6-d188-405f-75fe-63dca170c22a,2005,"Blinman, S., & Cockburn, A. (2005, January). Program comprehension: investigating the effects of naming style and documentation. In Proceedings of the Sixth Australasian conference on User interface-Volume 40 (pp. 73-78).",conference,"naming styles, documentation > code comprehension",Naming style
H15,https://www.mendeley.com/reference-manager/reader-v2/f1eaeae2-5e0f-3b5c-bfc2-0c2ce7a702c9/4ead0238-915d-fb4b-4717-fe92a563701e,2009,"Binkley, D., Davis, M., Lawrie, D., & Morrell, C. (2009, May). To camelcase or under_score. In 2009 IEEE 17th International Conference on Program Comprehension (pp. 158-167). IEEE.",conference,"naming styles, naming style > code comprehension",Identifier style
H16,https://www.mendeley.com/reference-manager/reader-v2/225f1851-319c-3483-8916-9ac61ae10917/66e690ae-92ed-fe57-111a-4e2b20f37aaa,2013,"Scanniello, G., & Risi, M. (2013, September). Dealing with faults in source code: Abbreviated vs. full-word identifier names. In 2013 IEEE International Conference on Software Maintenance (pp. 190-199). IEEE.",conference,naming style (abbreviations vs full-world) > ability to identify and fix faults,Identifier names
H17,,2021,"Cates, R., Yunik, N., & Feitelson, D. G. (2021, May). Does code structure affect comprehension? On using and naming intermediate variables. In 2021 IEEE/ACM 29th International Conference on Program Comprehension (ICPC) (pp. 118-126). IEEE.",conference,use of intermediate variables > code comprehension,Code structure
H18,https://www.mendeley.com/reference-manager/reader-v2/4334b2b5-2c1c-3874-9230-09ea4d755909/44b6b462-fc19-bedd-56b4-a76b777fa376,2012,"Sharafi, Z., Soh, Z., Guéhéneuc, Y. G., & Antoniol, G. (2012, June). Women and men—different but equal: On the impact of identifier style on source code reading. In 2012 20th IEEE International Conference on Program Comprehension (ICPC) (pp. 27-36). IEEE.
",conference,"naming style, gender > code comprehension",Identifier style
H19,https://www.mendeley.com/reference-manager/reader-v2/0e0e27b7-6958-355d-a93a-3e51145b3839/1b67e114-5b9a-0e37-0fca-004280ab3542,2010,"Arnaoudova, V., Eshkevari, L., Oliveto, R., Gueheneuc, Y. G., & Antoniol, G. (2010, September). Physical and conceptual identifier dispersion: Measures and relation to fault proneness. In 2010 IEEE International Conference on Software Maintenance (pp. 1-5). IEEE.
Arnaoudova, V., Eshkevari, L., Oliveto, R., Guéhéneuc, Y. G., & Antoniol, G. (2010). An empirical study on the relation between identifiers and fault proneness.
",conference,identifier dispersion <> code comprehension,Identiﬁer Dispersion
H2,https://www.mendeley.com/reference-manager/reader-v2/7456a196-3a22-3e3e-acee-65b428cd0730/6590ec78-1c0d-fcef-0a6e-191ace9373a2,2007,"Lawrie, D., Morrell, C., Feild, H., & Binkley, D. (2007). Effective identifier names for comprehension and memory. Innovations in Systems and Software Engineering, 3(4), 303-318.",journal,"identifier design (single letters, abbreviations, full words) > code comprehension",Identifier names
H20,https://www.mendeley.com/reference-manager/reader-v2/fab28aee-6eee-3074-852c-b83cbb4a5d04/1fc32ae7-b18c-27a7-4c11-a20bf40f1ffe,2017,"Scanniello, G., Risi, M., Tramontana, P., & Romano, S. (2017). Fixing faults in c and java source code: Abbreviated vs. full-word identifier names. ACM Transactions on Software Engineering and Methodology (TOSEM), 26(2), 1-43.",journal,naming style (abbreviations vs full-world) > ability to identify and fix faults,Identifier names
H20,https://www.mendeley.com/reference-manager/reader-v2/c206d42f-dc56-39f7-850d-8f38ca08b84f/646d49bc-1c4b-ac5b-3cd7-3ce1855efe66,2018,"Fakhoury, S., Ma, Y., Arnaoudova, V., & Adesope, O. (2018, May). The effect of poor source code lexicon and readability on developers' cognitive load. In Proceedings of the 26th Conference on Program Comprehension (pp. 286-296).",conference,"fNIRS and eye tracking data <> code comprehension
poor source code lexicon and readability > code comprehension",Source code lexicon
H3,https://www.mendeley.com/reference-manager/reader-v2/1923cd84-c2a2-38c2-8125-384d0fa33504/12031cc0-ba8d-fecf-68a9-0a85e7137d02,2017,"Beniamini, G., Gingichashvili, S., Orbach, A. K., & Feitelson, D. G. (2017, May). Meaningful identifier names: the case of single-letter variables. In 2017 IEEE/ACM 25th International Conference on Program Comprehension (ICPC) (pp. 45-54). IEEE.",conference,single letter variables > code comprehension,Identifier names
H4,https://www.mendeley.com/reference-manager/reader-v2/ad7a42d6-9a0f-3877-a7e2-b0f199e8aa33/0f57d453-cccd-fbff-32df-5cc00873714a,2018,"Schankin, A., Berger, A., Holt, D. V., Hofmeister, J. C., Riedel, T., & Beigl, M. (2018, May). Descriptive compound identifier names improve source code comprehension. In 2018 IEEE/ACM 26th International Conference on Program Comprehension (ICPC) (pp. 31-3109). IEEE.",conference,identifier naming styles (short vs. descriptive compound) > code comprehension,Identifier names
H5,https://www.mendeley.com/reference-manager/reader-v2/9a07d82f-3b71-3a58-a0cc-e005a9b957a5/5974253d-1b45-fb69-6f89-4237df436dc6,2013,"Binkley, D., Davis, M., Lawrie, D., Maletic, J. I., Morrell, C., & Sharif, B. (2013). The impact of identifier style on effort and comprehension. Empirical Software Engineering, 18(2), 219-276.",journal,identifier casing style (camelCase vs. underscore) > code comprehension,Identifier style
H6,https://www.mendeley.com/reference-manager/reader-v2/2176086e-c310-3e53-94ac-e8167a4a2d56/2fad3d61-6a85-fc59-1ea6-baed6b837276,1996,"Takang, A. A., Grubb, P. A., & Macredie, R. D. (1996). The effects of comments and identifier names on program comprehensibility: an experimental investigation. J. Prog. Lang., 4(3), 143-167.",journal,comments and identifier naming styles > code comprehension,Identifier names
H7,https://www.mendeley.com/reference-manager/reader-v2/20ab535f-92f4-348c-8995-997644c5ee31/598df8c1-7abf-a157-7f5b-6d4b40f68ade,2018,"Ribeiro, T. V., & Travassos, G. H. (2018). Attributes Influencing the Reading and Comprehension of Source Code–Discussing Contradictory Evidence. CLEI ELECTRONIC JOURNAL, 21(1).",journal,"code size, identifier length, and code comments > code comprehension",Source code readability
H8,https://www.mendeley.com/reference-manager/reader-v2/8733baec-73e5-393e-9e03-b5ef99a30c17/1e1fe3fb-bb56-0055-4037-c6e0ad337f5a,2019,"Fakhoury, S., Roy, D., Ma, Y., Arnaoudova, V., & Adesope, O. (2019). Measuring the impact of lexical and structural inconsistencies on developers’ cognitive load during bug localization. Empirical Software Engineering, 1-39.",journal,"fNIRS and eye tracking data <> code comprehension (RQ1)
poor source code lexicon and readability > code comprehension (RQ2-8)",Lexical incosistencies
H9,https://www.mendeley.com/reference-manager/reader-v2/5ebdca3d-dbe4-305d-99b1-85d6e7fe7e6a/5349f6c0-e76d-bcb7-3ac3-a19a3db2f2ba,2017,"Avidan, E., & Feitelson, D. G. (2017, May). Effects of variable names on comprehension: An empirical study. In 2017 IEEE/ACM 25th International Conference on Program Comprehension (ICPC) (pp. 55-65). IEEE.",conference,local variable names and parameter names > code comprehension,Variable names